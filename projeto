 classe Pessoa em Java:

public class Pessoa {
    private int id;
    private String nome;
    private String cpf;
    private Date dataNascimento;
    private String endereco;

    
}


Backend em Java:

@RestController
@RequestMapping("/pessoas")
public class PessoaController {
    @Autowired
    private PessoaService pessoaService;

    // Endpoint para cadastrar uma nova pessoa
    @PostMapping("/")
    public Pessoa cadastrarPessoa(@RequestBody Pessoa pessoa) {
        return pessoaService.cadastrarPessoa(pessoa);
    }

    // Endpoint para consultar uma pessoa pelo ID
    @GetMapping("/{id}")
    public Pessoa consultarPessoa(@PathVariable int id) {
        return pessoaService.consultarPessoa(id);
    }

    // Endpoint para atualizar uma pessoa pelo ID
    @PutMapping("/{id}")
    public Pessoa atualizarPessoa(@PathVariable int id, @RequestBody Pessoa pessoa) {
        return pessoaService.atualizarPessoa(id, pessoa);
    }

    // Endpoint para excluir uma pessoa pelo ID
    @DeleteMapping("/{id}")
    public void excluirPessoa(@PathVariable int id) {
        pessoaService.excluirPessoa(id);
    }
}


Frontend em HTML:

<!DOCTYPE html>
<html>
<head>
    <title>Cadastro de Pessoa</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>Cadastro de Pessoa</h1>
    <form id="pessoaForm">
        <label for="nome">Nome:</label>
        <input type="text" id="nome" name="nome"><br>

        <label for="cpf">CPF:</label>
        <input type="text" id="cpf" name="cpf"><br>

        <label for="dataNascimento">Data de Nascimento:</label>
        <input type="date" id="dataNascimento" name="dataNascimento"><br>

        <label for="endereco">Endereço:</label>
        <input type="text" id="endereco" name="endereco"><br>

        <button type="submit">Cadastrar</button>
    </form>

    <script>
        $(document).ready(function() {
            $('#pessoaForm').submit(function(event) {
                event.preventDefault();
                var pessoa = {
                    nome: $('#nome').val(),
                    cpf: $('#cpf').val(),
                    dataNascimento: $('#dataNascimento').val(),
                    endereco: $('#endereco').val()
                };

                $.ajax({
                    url: '/pessoas/',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(pessoa),
                    success: function(data) {
                        alert('Pessoa cadastrada com sucesso!');
                        // Faça algo com a resposta do servidor, se necessário
                    },
                    error: function() {
                        alert('Erro ao cadastrar pessoa!');
                    }
                });
            });
        });
    </script>
</body>
</html>

 Modelo de Dados: classe Movimento em Java:


public class Movimento {
    private int id;
    private ContaCorrente contaCorrente;
    private Date data;
    private double valor;
    private String tipo;
    private ContaCorrente contaCorrenteOrigem;
    private ContaCorrente contaCorrenteDestino;
    private String observacao;

}


Backend em Java:código Java usando o Spring Boot para as funcionalidades adicionais:

@RestController
@RequestMapping("/usuarios")
public class UsuarioController {
    @Autowired
    private UsuarioService usuarioService;

    // Endpoint para cadastrar um novo usuário vinculado a uma pessoa
    @PostMapping("/")
    public Usuario cadastrarUsuario(@RequestBody Usuario usuario) {
        return usuarioService.cadastrarUsuario(usuario);
    }

    // Endpoint para realizar o login
    @PostMapping("/login")
    public Usuario fazerLogin(@RequestParam String email, @RequestParam String senha) {
        return usuarioService.fazerLogin(email, senha);
    }
}

@RestController
@RequestMapping("/contas")
public class ContaCorrenteController {
    @Autowired
    private ContaCorrenteService contaCorrenteService;

    // Endpoint para cadastrar uma nova conta corrente vinculada a um usuário
    @PostMapping("/")
    public ContaCorrente cadastrarContaCorrente(@RequestBody ContaCorrente contaCorrente) {
        return contaCorrenteService.cadastrarContaCorrente(contaCorrente);
    }

    // Endpoint para consultar o saldo de uma conta corrente
    @GetMapping("/{id}/saldo")
    public double consultarSaldo(@PathVariable int id) {
        return contaCorrenteService.consultarSaldo(id);
    }
}

@RestController
@RequestMapping("/movimentos")
public class MovimentoController {
    @Autowired
    private MovimentoService movimentoService;

    // Endpoint para consultar o histórico de movimentos de uma conta corrente
    @GetMapping("/{contaCorrenteId}")
    public List<Movimento> consultarHistoricoMovimentos(@PathVariable int contaCorrenteId,
                                                        @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date dataInicial,
                                                        @RequestParam @DateTimeFormat(pattern = "yyyy-MM-dd") Date dataFinal) {
        return movimentoService.consultarHistoricoMovimentos(contaCorrenteId, dataInicial, dataFinal);
    }

    // Endpoint para cadastrar um novo movimento (realizar transferência)
    @PostMapping("/")
    public Movimento cadastrarMovimento(@RequestBody Movimento movimento) {
        return movimentoService.cadastrarMovimento(movimento);
    }

    // Endpoint para realizar um depósito em uma conta corrente
    @PostMapping("/deposito")
    public Movimento realizarDeposito(@RequestBody Movimento movimento) {
        return movimentoService.realizarDeposito(movimento);
    }
}


Frontend em HTML: código HTML e JavaScript para a tela de login:

<!DOCTYPE html>
<html>
<head>
    <title>Login</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <h1>Login</h1>
    <form id="loginForm">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email"><br>

        <label for="senha">Senha:</label>
        <input type="password" id="senha" name="senha"><br>

        <button type="submit">Entrar</button>
    </form>

    <script>
        $(document).ready(function() {
            $('#loginForm').submit(function(event) {
                event.preventDefault();
                var email = $('#email').val();
                var senha = $('#senha').val();

                $.ajax({
                    url: '/usuarios/login',
                    type: 'POST',
                    data: {
                        email: email,
                        senha: senha
                    },
                    success: function(data) {
                        // Redirecionar para a página de seleção de conta corrente
                        window.location.href = '/contas/selecao?usuarioId=' + data.id;
                    },
                    error: function() {
                        alert('Email ou senha inválidos!');
                    }
                });
            });
        });
    </script>
</body>
</html>
